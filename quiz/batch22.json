[
  {
    "question": "Which React 18 feature allows interruptible rendering for better responsiveness?",
    "options": ["Concurrent Mode", "Strict Mode", "Profiler", "Suspense"],
    "answer": "Concurrent Mode"
  },
  {
    "question": "Which React feature allows showing fallback UI while waiting for data or code?",
    "options": ["Suspense", "useEffect", "useTransition", "Profiler"],
    "answer": "Suspense"
  },
  {
    "question": "Which hook in React 18 allows marking updates as non-urgent?",
    "options": ["useTransition", "useDeferredValue", "useEffect", "useLayoutEffect"],
    "answer": "useTransition"
  },
  {
    "question": "Which hook allows deferring a value to reduce UI blocking?",
    "options": ["useDeferredValue", "useTransition", "useMemo", "useCallback"],
    "answer": "useDeferredValue"
  },
  {
    "question": "Which feature allows React to render multiple state updates in one render pass?",
    "options": ["Automatic Batching", "Concurrent Mode", "Suspense", "Profiler"],
    "answer": "Automatic Batching"
  },
  {
    "question": "Which React component type is rendered on the server and does not include client-side state?",
    "options": ["Server Component", "Client Component", "Pure Component", "Memo Component"],
    "answer": "Server Component"
  },
  {
    "question": "Which directive is used to mark a component as a client component in Next.js App Router?",
    "options": ["'use client'", "'client only'", "'next client'", "'client component'"],
    "answer": "'use client'"
  },
  {
    "question": "Which React feature helps to progressively render content without blocking the main thread?",
    "options": ["Suspense", "useTransition", "Concurrent Mode", "useDeferredValue"],
    "answer": "Concurrent Mode"
  },
  {
    "question": "Which React hook allows optimizing rendering for input-heavy components by deferring updates?",
    "options": ["useTransition", "useDeferredValue", "useMemo", "useCallback"],
    "answer": "useTransition"
  },
  {
    "question": "Which feature allows server components to fetch data before sending HTML to the client?",
    "options": ["Server Component", "Client Component", "Suspense", "useEffect"],
    "answer": "Server Component"
  },
  {
    "question": "Which React 18 hook allows deferring non-urgent UI updates to improve responsiveness?",
    "options": ["useTransition", "useDeferredValue", "useEffect", "useLayoutEffect"],
    "answer": "useTransition"
  },
  {
    "question": "Which React feature allows showing skeletons or placeholders while waiting for async data?",
    "options": ["Suspense", "Profiler", "Strict Mode", "Concurrent Mode"],
    "answer": "Suspense"
  },
  {
    "question": "Which type of React component can be rendered on the server to reduce client bundle size?",
    "options": ["Server Component", "Client Component", "Memo Component", "Pure Component"],
    "answer": "Server Component"
  },
  {
    "question": "Which React feature allows partially rendering UI and pausing work without blocking?",
    "options": ["Concurrent Mode", "Strict Mode", "Profiler", "useEffect"],
    "answer": "Concurrent Mode"
  },
  {
    "question": "Which React hook helps manage low-priority updates separately from urgent updates?",
    "options": ["useTransition", "useDeferredValue", "useState", "useReducer"],
    "answer": "useTransition"
  },
  {
    "question": "Which React feature is designed to reduce client bundle size by rendering some components only on the server?",
    "options": ["Server Component", "Client Component", "HOC", "Suspense"],
    "answer": "Server Component"
  },
  {
    "question": "Which React 18 hook allows smooth transitions by deferring less important updates?",
    "options": ["useTransition", "useDeferredValue", "useEffect", "useLayoutEffect"],
    "answer": "useTransition"
  },
  {
    "question": "Which feature allows React to show fallback UI for data fetching without blocking other updates?",
    "options": ["Suspense", "Concurrent Mode", "Profiler", "Strict Mode"],
    "answer": "Suspense"
  },
  {
    "question": "Which React component type can include server-side data fetching without sending extra JS to the client?",
    "options": ["Server Component", "Client Component", "Pure Component", "Memo Component"],
    "answer": "Server Component"
  },
  {
    "question": "Which React hook allows deferring values to prevent blocking urgent UI updates?",
    "options": ["useDeferredValue", "useTransition", "useMemo", "useCallback"],
    "answer": "useDeferredValue"
  }
]
